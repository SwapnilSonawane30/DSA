#include"bits/stdc++.h"
using namespace std;
struct Node{
    int data;
    struct Node*left;
    struct Node*right;

    Node(int val){
        data=val;
        left=NULL;
        right=NULL;

    }
};
Node*inordersucc(Node*root){
    Node*curr= root;
    while(curr && curr->left!=NULL){
        curr= curr->left;
    }
    return curr;
}
Node*deletebst(Node*root,int key){

    if(root==NULL){
        return NULL;
    }
    if(key>root->data){
       root->right=deletebst(root->right,key);
    }
    else if(key<root->data){
        root->left=deletebst(root->left,key);
    }
    else{
        if(root->left==NULL){
            Node*temp=root->right;
            free(root);
            return temp;

        }
        else if(root->right==NULL){
            Node*temp=root->left;
            free(root);
            return temp;
        }
        else
        {
            Node*temp= inordersucc(root->right);
            root->data= temp->data;
            temp->right= deletebst(temp->right,temp->data);

        }
      
    }
    return root;
}
Node*insertval(Node*root,int val){
    if (root==NULL){
        return new Node(val);
    }
    if(root->data > val){
         root->left=insertval(root->left,val);
    }
    else{
        //root->data< val
         root->right=insertval(root->right,val);
    }
    return root;
}
void inorder( struct Node*root){
    if (root==NULL){
        return;
    }
    inorder (root->left);
    cout<<root->data<<" ";
    inorder(root->right);
}

int main(){
    Node*root=NULL;
    root=insertval(root,5);
    insertval(root,1);
    insertval(root,3);
    insertval(root,4);
    insertval(root,2);
    insertval(root,7);
    cout<<" the original BST is ";
    inorder(root);
    cout<<endl;
    cout<<"after deletion of node: ";
    deletebst(root,1);
    inorder(root);
}
